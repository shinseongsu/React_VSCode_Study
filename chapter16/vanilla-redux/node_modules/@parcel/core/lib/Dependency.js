"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createDependency = createDependency;
exports.mergeDependencies = mergeDependencies;

var _utils = require("@parcel/utils");

var _Environment = require("./Environment");

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function createDependency(opts) {
  var _opts$isAsync, _opts$isEntry, _opts$isOptional, _opts$isURL;

  let id = opts.id || (0, _utils.md5FromObject)({
    sourceAssetId: opts.sourceAssetId,
    moduleSpecifier: opts.moduleSpecifier,
    env: (0, _Environment.getEnvironmentHash)(opts.env),
    target: opts.target,
    pipeline: opts.pipeline
  });
  return _objectSpread({}, opts, {
    id,
    isAsync: (_opts$isAsync = opts.isAsync) !== null && _opts$isAsync !== void 0 ? _opts$isAsync : false,
    isEntry: (_opts$isEntry = opts.isEntry) !== null && _opts$isEntry !== void 0 ? _opts$isEntry : false,
    isOptional: (_opts$isOptional = opts.isOptional) !== null && _opts$isOptional !== void 0 ? _opts$isOptional : false,
    isURL: (_opts$isURL = opts.isURL) !== null && _opts$isURL !== void 0 ? _opts$isURL : false,
    meta: opts.meta || {},
    symbols: opts.symbols || new Map()
  });
}

function mergeDependencies(a, b) {
  var _a$isWeak;

  let {
    meta,
    symbols,
    isWeak
  } = b,
      other = _objectWithoutProperties(b, ["meta", "symbols", "isWeak"]);

  Object.assign(a, other);
  Object.assign(a.meta, meta);
  a.isWeak = a.isWeak === isWeak ? a.isWeak : (_a$isWeak = a.isWeak) !== null && _a$isWeak !== void 0 ? _a$isWeak : isWeak;

  for (let [k, v] of symbols) {
    a.symbols.set(k, v);
  }
}